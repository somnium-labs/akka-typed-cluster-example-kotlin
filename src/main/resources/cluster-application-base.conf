akka {
  loglevel = INFO
  serialization {
      jackson {
          jackson-modules += "com.fasterxml.jackson.module.kotlin.KotlinModule"
      }
  }

  actor {
    provider = cluster
    serialization-bindings {
      "com.labs.somnium.serializer.EventSerializeMarker" = jackson-json
      "com.labs.somnium.serializer.MsgSerializeMarker" = jackson-json
    }
  }

  remote {
    artery {
      enabled = on
      transport = tcp
    }
  }

  cluster {
    roles=["sharded"]
    sharding {
      number-of-shards = 30
      passivate-idle-entity-after = 2 minutes
      role = "sharded"
    }
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
    split-brain-resolver.active-strategy=keep-majority
    split-brain-resolver.keep-majority {
      # if the 'role' is defined the decision is based only on members with that 'role'
      role = "sharded"
    }
  }
}

clustering {
  cluster.name = ArtifactStateCluster
}